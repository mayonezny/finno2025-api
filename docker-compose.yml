version: '3.9'

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: unless-stopped
    ports:
      - '6333:6333'
      - '6334:6334'
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__SERVICE__HTTP_PORT: 6333
    # healthcheck:
    #   test:
    #     [
    #       'CMD-SHELL',
    #       "busybox sh -c 'exec 3<>/proc/self/fd/0; exec 3<>/dev/tcp/127.0.0.1/6333 && printf \"GET /readyz HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\n\" >&3 && timeout 2 cat <&3 | grep -q \"200\"'",
    #     ]
    #   interval: 10s
    #   timeout: 3s
    #   retries: 20
    #   start_period: 20s

  rag-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag-api
    restart: unless-stopped
    ports:
      - '8080:8080'
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: '0'
      # --- GigaChat (замени на свои значения) ---
      GIGACHAT_URL: '${GIGACHAT_URL}'
      GIGACHAT_AUTH_URL: '${GIGACHAT_AUTH_URL}'

      GIGACHAT_SECRET: '${GIGACHAT_SECRET}'
      GIGACHAT_TOKEN: '${GIGACHAT_TOKEN}'

      GIGACHAT_SCOPE: '${GIGACHAT_SCOPE}'
      # --- Модели ---
      GIGACHAT_EMB_MODEL: '${GIGACHAT_EMB_MODEL}'
      GIGACHAT_CHAT_MODEL: '${GIGACHAT_CHAT_MODEL}'

      # --- Qdrant ---
      QDRANT_URL: 'http://qdrant:6333'
      QDRANT_COLLECTION: '${QDRANT_COLLECTION}'
      QDRANT_DISTANCE: '${QDRANT_DISTANCE}'

      # --- RAG настройки ---
      RAG_TOP_K: '${RAG_TOP_K}'
      RAG_MAX_CHUNKS: '${RAG_MAX_CHUNKS}'
      RAG_CHUNK_SLICE: '${RAG_CHUNK_SLICE}'

      # Если используешь «срез контекста»/кодировки и т.п.
      NODE_ENV: 'production'

    #depends_on:
    #qdrant:
    #condition: service_healthy

volumes:
  qdrant_storage:
    external: true
